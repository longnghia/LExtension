{"version":3,"file":"background.js","mappings":"mBA0EA,SAASA,EAAMC,GACX,IAAIC,EAEJ,IACIA,EAAM,IAAIC,IAAIF,EAIlB,CAHE,MAAOG,GAEL,OAAO,CACX,CACA,OAAO,CAEX,CAiBA,SAASC,EAAeC,GACpBC,QAAQC,QAAQC,MAAMC,IAAI,MAAM,SAAUC,GACtC,GAAIA,EAAKC,WACL,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKC,WAAWE,OAAQD,IAAK,CAC7C,IAAIX,EAAMS,EAAKC,WAAWC,GAC1B,GAAIP,EAAIJ,IAAIa,WAAWb,GAGnB,YADAc,QAAQC,IAAI,0BAGpB,MAEAD,QAAQC,IAAI,mBAEhBV,QAAQW,KAAKC,OAAOb,EAAIc,GAC5B,GACJ,CCpHA,MAAMC,EAAM,eAEZd,QAAQe,cAAcC,wBAAwB,CAAE,MAAS,SAMzD,IAAIC,EAAY,aACZC,GAAU,EAGdlB,QAAQC,QAAQC,MAAMC,MAAMgB,MAAKlB,IAAW,QACjB,QAAnB,EAACA,EAAQgB,UAAU,OAAlB,EAAoBV,QACrBP,QAAQC,QAAQC,MAAMkB,IAAI,CAAE,aAAc,KAGpB,QAAtB,EAACnB,EAAoB,kBAAC,OAArB,EAAuBM,QACxBP,QAAQC,QAAQC,MAAMkB,IAAI,CAAE,WAAc,CAAC,uBAC/C,IAIJ,IAAIC,EAAK,GA0DT,SAASC,IACLb,QAAQC,IAAK,GAAEI,aAAgBI,EACnC,CAkCA,SAASK,EAAQC,GACbf,QAAQC,IAAK,GAAEI,UAAaU,EAChC,CAmBA,SAASC,EAAS1B,GAAK,MAEnB,OAAc,QAAP,EAAAA,EAAIJ,WAAG,aAAP,EAASa,WAAW,WAAW,CAC1C,CAEA,SAASkB,EAAa3B,GAClB,MAAO,CACHJ,IAAKI,EAAIJ,IACTgC,MAAO5B,EAAI4B,MAEXC,KAAMC,OAEd,CA7HApB,QAAQC,IAAK,GAAEI,aAEfQ,IAeAtB,QAAQC,QAAQ6B,UAAUC,aAb1B,SAA0BC,EAASC,GAE/BxB,QAAQC,IAAK,2BAA0BuB,KAEvC,MAAMC,EAAeC,OAAOC,KAAKJ,GAEjC,IAAK,MAAMK,KAAQH,EACfzB,QAAQC,IAAK,GAAE2B,kBACf5B,QAAQC,IAAI,cAAesB,EAAQK,GAAMC,UACzC7B,QAAQC,IAAI,cAAesB,EAAQK,GAAME,SAEjD,IAKAvC,QAAQC,QAAQC,MAAMC,MAAMgB,MAAKlB,IAC7BiB,GAAU,EACVI,IAEAD,EAAKpB,EAAQgB,GAEbR,QAAQC,IAAK,GAAEI,cAAiBO,GAEhCrB,QAAQe,cAAcyB,aAAa,CAAEC,KAAO,GAAEpB,EAAGd,UAAW,IAGhEP,QAAQ0C,SAASC,UAAUZ,aAAYa,UAGnC,OAFAnC,QAAQC,IAAK,GAAEI,cAAgB+B,KAEvBA,GACJ,KAAK5B,QAyBb2B,iBAEI,IAAK1B,EAED,YADAT,QAAQC,IAAK,GAAEI,0BAInB,IAAIH,QAyCRiC,iBAEI,aADiB5C,QAAQW,KAAKmC,MAAM,CAAEC,aAAa,EAAMC,eAAe,KAC5DC,OAAOxB,GAAUyB,IAAIxB,EACrC,CA5CqByB,GAEjBnD,QAAQC,QAAQC,MAAMC,MAAMgB,MAAKlB,IAC7BQ,QAAQC,IAAK,GAAEI,aAAgBb,GAE/BoB,EAAKpB,EAAQgB,GAEb,IAAImC,EAAUzC,EAAKsC,QAAOlD,IAAO,OA8BrBsD,EA9BiCtD,GA+B1CsB,EAAGiC,MAAKvD,GAAOA,EAAIJ,KAAO0D,EAAO1D,MAD5C,IAAoB0D,CA9BqC,IAE3B,GAAlBD,EAAQ7C,QAKZ6C,EAAQG,SAAQxD,IACZsB,EAAGmC,KAAKzD,EAAI,IAGhBC,QAAQC,QAAQC,MAAMkB,IAAI,CAAE,aAAcC,IAAMF,MAAK,WAW7D,IAAqBZ,EAVTE,QAAQC,IAAK,GAAEI,mBAAqBsC,EAAQ7C,gBAUnCA,EATGc,EAAGd,OAUvBP,QAAQC,QAAQC,MAAMC,MAAMgB,MAAKlB,IAC7BD,QAAQe,cAAcyB,aAAa,CAC/BC,KAAO,GAAElC,GAAkBN,EAAQgB,GAAWV,UAChD,GAZF,GAAGgB,IAXCd,QAAQC,IAAK,GAAEI,gBAAmBH,EAW3B,GACZY,EACP,CAtDkBkC,GACN,MAEJ,IAAK,UD/DTzD,QAAQW,KAAKmC,MAAM,CACfE,eAAe,IAChB,SAAUrC,GACT,IAAI+C,EAAM/C,EAAKgD,QAAO,CAACC,EAAK7D,KACxB6D,EAAIJ,KAAK,CAAE,MAASzD,EAAI4B,MAAO,IAAO5B,EAAIJ,MACnCiE,IACR,IACH,MAAMC,EAAOC,SAASC,cAAc,KAEpCF,EAAKG,KAAO,gCAAkCC,mBAAmBC,KAAKC,UAAUT,IAChFG,EAAKO,SAAWzD,EAAK,GAAGgB,MAAQ,QAChCkC,EAAKQ,OAET,ICoDQ,MACJ,IAAK,eDjDTrE,QAAQW,KAAKmC,MAAM,CACfwB,QAAQ,EACRtB,eAAe,IAChB,SAAUrC,GACTX,QAAQW,KAAK4D,OAAO,CAChBD,QAAQ,EACRE,YAAa7D,EAAK,GAAGE,GACrB4D,MAAO9D,EAAK,GAAG8D,MAAQ,EACvB9E,IAAKgB,EAAK,GAAGhB,KAErB,ICyCQ,MACJ,IAAK,cDeb,SAAsBkD,GAClB7C,QAAQW,KAAKmC,MAAM,CACfwB,QAAQ,EACRtB,eAAe,IAChB,SAAUrC,GACTX,QAAQW,KAAK+D,YAAY/D,EAAK,GAAGE,GAAI,CACjC8D,OAAQ,gBACR9B,QAASA,IACV,SAAU+B,GACTA,GAAYA,EAASf,MAjDjC,SAAiBA,EAAMhB,GACnB7C,QAAQW,KAAKmC,MAAM,CACfwB,QAAQ,EACRtB,eAAe,IAChB,SAAUrC,GACTX,QAAQW,KAAK4D,OAAO,CAChB5E,IAAKF,EAAMoE,GAAQA,EAAO,mCAAqCA,EAC/DS,OAAoB,eAAZzB,EACR4B,MAAO9D,EAAK,GAAG8D,MAAQ,GAE/B,GAEJ,CAqCyCI,CAAQD,EAASf,KAAMhB,EACxD,GACJ,GACJ,CC1BYiC,CAAajC,GACb,MACJ,IAAK,YD8CTpC,QAAQC,IAAI,UACZV,QAAQW,KAAKmC,MAAM,CACfC,aAAa,EACbC,eAAe,IAChB,SAAUrC,GACT,IAAKZ,OAAOY,EACRb,EAAeC,IAEvB,IClDc,G","sources":["webpack://firefox-extension-tempate/./src/Tabs.js","webpack://firefox-extension-tempate/./src/background.js"],"sourcesContent":["\n/* tabs */\nfunction saveTabs() {\n    browser.tabs.query({\n        currentWindow: true\n    }, function (tabs) {\n        let res = tabs.reduce((pre, tab) => {\n            pre.push({ 'title': tab.title, 'url': tab.url })\n            return pre\n        }, [])\n        const link = document.createElement('a');\n        // link.href = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(tabs))\n        link.href = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(res))\n        link.download = tabs[0].title + '.json';\n        link.click();\n\n    })\n}\n\nfunction dublicateTab() {\n    browser.tabs.query({\n        active: true,\n        currentWindow: true\n    }, function (tabs) {\n        browser.tabs.create({\n            active: false,\n            openerTabId: tabs[0].id,\n            index: tabs[0].index + 1,\n            url: tabs[0].url,\n        })\n    });\n}\n\nfunction save2Json(data) {\n    if (data) {\n        let url = URL.createObjectURL(new Blob([JSON.stringify(data)], {\n            type: \"text/plain\"\n        }))\n        const link = document.createElement('a');\n        link.href = url\n        link.download = 'read_later_' + new Date().toDateString().replaceAll(' ', '_') + '.json'\n        link.click();\n    }\n}\n\n/* Open selected */\n\nfunction openUrl(link, command) {\n    browser.tabs.query({\n        active: true,\n        currentWindow: true\n    }, function (tabs) {\n        browser.tabs.create({\n            url: isURL(link) ? link : 'https://www.google.com/search?q=' + link,\n            active: command === 'open-in-bg' ? false : true,\n            index: tabs[0].index + 1,\n        });\n    })\n\n}\n\nfunction openLink(href, active = false){\n    browser.tabs.query({\n        active: true,\n        currentWindow: true\n    }, function (tabs) {\n        browser.tabs.create({\n            url: href,\n            active: active,\n            index: tabs[0].index + 1,\n        });\n    })\n}\n\nfunction isURL(string) {\n    let url;\n\n    try {\n        url = new URL(string);\n    } catch (e) {\n        // console.error(e)\n        return false;\n    }\n    return true\n    // return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction openSelected(command) {\n    browser.tabs.query({\n        active: true,\n        currentWindow: true\n    }, function (tabs) {\n        browser.tabs.sendMessage(tabs[0].id, {\n            action: \"open-selected\",\n            command: command\n        }, function (response) {\n            response && response.link && openUrl(response.link, command)\n        })\n    })\n}\n\n/* fake ctr w */\nfunction isInCollection(tab) {\n    browser.storage.local.get(null, function (data) {\n        if (data.collection) {\n            for (let i = 0; i < data.collection.length; i++) {\n                let url = data.collection[i];\n                if (tab.url.startsWith(url)) {\n                    // audio.play()\n                    console.log(\"not close postman ok :3\");\n                    return;\n                }\n            }\n        } else {\n            console.log(\"collection null\")\n        }\n        browser.tabs.remove(tab.id)\n    })\n}\n\nfunction doFakeCtrW() {\n    console.log(\"ctr W!\")\n    browser.tabs.query({\n        highlighted: true,\n        currentWindow: true\n    }, function (tabs) {\n        for (tab of tabs) {\n            isInCollection(tab)\n        }\n    })\n}\n\nexport { saveTabs, dublicateTab, save2Json, openUrl, openSelected, doFakeCtrW, openLink }","import { saveTabs, dublicateTab, save2Json, openUrl, openSelected, doFakeCtrW } from \"./Tabs\"\n\nconst TAG = \"[Background]\"\n\nbrowser.browserAction.setBadgeBackgroundColor({ 'color': 'blue' });\n\n// let gettingActiveTab = browser.tabs.query({ active: true, currentWindow: true });\n// let gettingSelectedTab = browser.tabs.query({ highlighted: true, currentWindow: true });\n\n\nlet readLater = \"read-later\"\nlet isReady = false\n\n// check and set database\nbrowser.storage.local.get().then(storage => {\n    if (!storage[readLater]?.length) {\n        browser.storage.local.set({ \"read-later\": [] })\n    }\n\n    if (!storage[\"collection\"]?.length) {\n        browser.storage.local.set({ \"collection\": [\"https://github.dev\"] })\n    }\n})\n\n// let db = { \"read-later\": [] }\nlet db = []\n\nconsole.log(`${TAG} Loaded.`);\n\nsetActionIcon()\n\nfunction logStorageChange(changes, area) {\n\n    console.log(`Change in storage area: ${area}`);\n\n    const changedItems = Object.keys(changes);\n\n    for (const item of changedItems) {\n        console.log(`${item} has changed:`);\n        console.log(\"Old value: \", changes[item].oldValue);\n        console.log(\"New value: \", changes[item].newValue);\n    }\n}\n\nbrowser.storage.onChanged.addListener(logStorageChange);\n\n// init data\nbrowser.storage.local.get().then(storage => {\n    isReady = true\n    setActionIcon()\n\n    db = storage[readLater]\n\n    console.log(`${TAG} DB Loaded`, db);\n\n    browser.browserAction.setBadgeText({ text: `${db.length}` });\n});\n\nbrowser.commands.onCommand.addListener(async (command) => {\n    console.log(`${TAG} command= ${command}`);\n\n    switch (command) {\n        case readLater:\n            await savePages()\n            break;\n\n        case \"logTabs\":\n            saveTabs();\n            break;\n        case \"dublicateTab\":\n            dublicateTab();\n            break;\n        case \"open-in-bg\" || command == \"open-in-fg\":\n            openSelected(command)\n            break;\n        case \"fakeCtrlW\":\n            doFakeCtrW()\n            break;\n        default:\n            break;\n    }\n});\n\nfunction setActionIcon() {\n    console.log(`${TAG} isReady=`, isReady);\n}\n\nasync function savePages() {\n\n    if (!isReady) {\n        console.log(`${TAG} Extension not ready!`);\n        return\n    }\n\n    let tabs = await getTabsInfo()\n\n    browser.storage.local.get().then(storage => {\n        console.log(`${TAG} savePage`, storage);\n\n        db = storage[readLater]\n\n        let newTabs = tabs.filter(tab => !tabExisted(tab))\n\n        if (newTabs.length == 0) {\n            console.log(`${TAG} Tabs exist!`, tabs)\n            return\n        }\n\n        newTabs.forEach(tab => {\n            db.push(tab)\n        })\n\n        browser.storage.local.set({ \"read-later\": db }).then(function () {\n            console.log(`${TAG} SUCCESS saved ${newTabs.length} tabs.`);\n            updateBadge(db.length)\n        }, onError)\n    }, onError);\n}\n\nfunction onError(err) {\n    console.log(`${TAG} ERROR`, err);\n}\n\nfunction updateBadge(length) {\n    browser.storage.local.get().then(storage => {\n        browser.browserAction.setBadgeText({\n            text: `${length ? length : storage[readLater].length}`\n        });\n    });\n}\n\nfunction tabExisted(newTab) {\n    return db.some(tab => tab.url == newTab.url)\n}\n\nasync function getTabsInfo() {\n    let tabs = await browser.tabs.query({ highlighted: true, currentWindow: true })\n    return tabs.filter(tabValid).map(parseTabInfo)\n}\n\nfunction tabValid(tab) {\n    // TODO: regex tab\n    return tab.url?.startsWith(\"http\") ?? false\n}\n\nfunction parseTabInfo(tab) {\n    return {\n        url: tab.url,\n        title: tab.title,\n        // icon: tab.favIconUrl,\n        date: Date()\n    }\n}\n\n/*\nread-later: [\n    {url:title:date},\n    {url:title:date},\n    {url:title:date},\n],\n*/"],"names":["isURL","string","url","URL","e","isInCollection","tab","browser","storage","local","get","data","collection","i","length","startsWith","console","log","tabs","remove","id","TAG","browserAction","setBadgeBackgroundColor","readLater","isReady","then","set","db","setActionIcon","onError","err","tabValid","parseTabInfo","title","date","Date","onChanged","addListener","changes","area","changedItems","Object","keys","item","oldValue","newValue","setBadgeText","text","commands","onCommand","async","command","query","highlighted","currentWindow","filter","map","getTabsInfo","newTabs","newTab","some","forEach","push","savePages","res","reduce","pre","link","document","createElement","href","encodeURIComponent","JSON","stringify","download","click","active","create","openerTabId","index","sendMessage","action","response","openUrl","openSelected"],"sourceRoot":""}